diff -Naurw ./lib/sw_apps/zynqmp_fsbl/src/te_xfsbl_hooks_te0803.c ../git/lib/sw_apps/zynqmp_fsbl/src/te_xfsbl_hooks_te0803.c
--- ./lib/sw_apps/zynqmp_fsbl/src/te_xfsbl_hooks_te0803.c	2021-07-23 09:47:44.286548533 +0200
+++ ../git/lib/sw_apps/zynqmp_fsbl/src/te_xfsbl_hooks_te0803.c	2021-07-23 09:48:34.967002101 +0200
@@ -143,30 +143,18 @@
   xil_printf("TE0803 TE_XFsbl_HookPsuInit_Custom\r\n"); 
   /* Add the code here */
   // ------------------------------------------------------
-  // reset PCI and USB
+  // reset USB0, USB1
   	u32 dataVal = 0;
 
     // USB reset  
-		/* Set MIO30 direction as output */
-    XFsbl_Out32(GPIO_DIRM_1, XFsbl_In32(GPIO_DIRM_1) | GPIO_MIO30_MASK);
+    /* Set MIO34, MIO35 direction as output */
+    XFsbl_Out32(GPIO_DIRM_1, XFsbl_In32(GPIO_DIRM_1) | GPIO_MIO34_MASK | GPIO_MIO35_MASK);
 
-		/* Set MIO30 output enable */
-    XFsbl_Out32(GPIO_OEN_1, XFsbl_In32(GPIO_OEN_1) | GPIO_MIO30_MASK);  
+	/* Set MIO34-35 output enable */
+    XFsbl_Out32(GPIO_OEN_1, XFsbl_In32(GPIO_OEN_1) | GPIO_MIO34_MASK | GPIO_MIO35_MASK);  
     
-    /* Set MIO30 to LOW */
-		dataVal = XFsbl_In32(GPIO_DATA_1) & ~(GPIO_MIO30_MASK);
-		XFsbl_Out32(GPIO_DATA_1, dataVal);
-    
-    // pcie reset
-    /* Set MIO31 direction as output */
-    XFsbl_Out32(GPIO_DIRM_1, XFsbl_In32(GPIO_DIRM_1) | GPIO_MIO31_MASK);
-
-    /* Set MIO31 output enable */
-    XFsbl_Out32(GPIO_OEN_1, XFsbl_In32(GPIO_OEN_1) | GPIO_MIO31_MASK);
-
-
-    /* Set MIO31 to LOW */
-    dataVal = XFsbl_In32(GPIO_DATA_1) & ~(GPIO_MIO31_MASK);
+    /* Set MIO34-35 to LOW */
+		dataVal = XFsbl_In32(GPIO_DATA_1) & ~(GPIO_MIO34_MASK) & ~(GPIO_MIO35_MASK);
     XFsbl_Out32(GPIO_DATA_1, dataVal);
 
   // ------------------------------------------------------
@@ -175,13 +163,6 @@
      xil_printf("Error:I2C Init\r\n");
      goto END;
   }
-  // change I2C switch to get access to SI5345
-  xil_printf("Configure Carrier I2C Switch 0x77\r\n");
-  Status = iic_write8(0x77, 0x00,  0x10);    // Configure I2C Switch
-  if (Status != XFSBL_SUCCESS) {
-     xil_printf("Error: Configure TEBF0808 I2C Switch 0x77 for TE0803 SI5338 access\r\n");
-     goto END;
-  }
   
   xil_printf("Configure PLL: ");
 
@@ -203,18 +184,13 @@
   }
   
   // ------------------------------------------------------
-  // release PCI and USB reset
-  /* Set MIO30 to HIGH */
-  dataVal = XFsbl_In32(GPIO_DATA_1) | GPIO_MIO30_MASK;
+  // release USB resets
+  /* Set MIO34-35 to HIGH */
+  dataVal = XFsbl_In32(GPIO_DATA_1) | GPIO_MIO34_MASK | GPIO_MIO35_MASK;
   XFsbl_Out32(GPIO_DATA_1, dataVal);
   xil_printf("USB Reset Complete \r\n");
   
 
-  /* Set MIO31 to HIGH */
-  dataVal = XFsbl_In32(GPIO_DATA_1) | GPIO_MIO31_MASK;
-  XFsbl_Out32(GPIO_DATA_1, dataVal);
-  xil_printf("PCIe Reset Complete\r\n");
-
   // ------------------------------------------------------
   xil_printf("\r\n--------------------------------------------------------------------------------\r\n");
   /* wait after initialization*/
@@ -337,15 +313,14 @@
   xil_printf("TE0803 TE_XFsbl_BoardInit_Custom\r\n");
 	// /* Add the code here */
 
-  //check USB,PCIe Reset
+  //check USB Reset
   RegVal = XFsbl_In32(GPIO_DATA_1) ;
-  temp = ((RegVal) & (GPIO_MIO30_MASK))>>4;
-  if (temp!=0x1) {
-    xil_printf("USB is hold into reset. (GPIO_DATA_1, Val:%x)\r\n", RegVal);
-  }
-  temp = ((RegVal) & (GPIO_MIO31_MASK))>>5;
-  if (temp!=0x1) {
-    xil_printf("PCIe is hold into reset. (GPIO_DATA_1, Val:%x)\r\n", RegVal);
+  if (!(RegVal & (GPIO_MIO34_MASK))) {
+    xil_printf("USB0 is held in reset. (GPIO_DATA_1, Val:%x)\r\n", RegVal);
+  }
+
+  if (!(RegVal & (GPIO_MIO35_MASK))) {
+    xil_printf("USB1 is held in reset. (GPIO_DATA_1, Val:%x)\r\n", RegVal);
   }
   //check serdes(gtr)
 #if defined(SERDES_PLL_REF_SEL0_PLLREFSEL0_DEFVAL)
@@ -387,14 +362,6 @@
     }
   #endif
   
-  // change I2C switch to get access to EEPROM 
-  xil_printf("Configure Carrier I2C Switch 0x73 for EEPROM access\r\n");
-  Status = iic_write8(0x73, 0x00,  0x20);    // Configure I2C Switch
-  if (Status != XFSBL_SUCCESS) {
-     xil_printf("Error: Configure Carrier I2C Switch 0x73\r\n");
-     goto END;
-  }
-  
   xil_printf("\r\n--------------------------------------------------------------------------------\r\n");
 
   END:
diff -Naurw ./lib/sw_apps/zynqmp_fsbl/src/te_xfsbl_hooks_te0803.h ../git/lib/sw_apps/zynqmp_fsbl/src/te_xfsbl_hooks_te0803.h
--- ./lib/sw_apps/zynqmp_fsbl/src/te_xfsbl_hooks_te0803.h	2021-07-23 09:47:44.286548533 +0200
+++ ../git/lib/sw_apps/zynqmp_fsbl/src/te_xfsbl_hooks_te0803.h	2021-07-23 09:48:34.967002101 +0200
@@ -31,6 +31,8 @@
 #define USE_TE_PSU_FOR_SI_INIT //enable TE PSU to write SI on the correct place in the FSBL (Xilinx default PSU is deactivated)
 
 
+#define GPIO_MIO35_MASK	0x00000200U
+#define GPIO_MIO34_MASK	0x00000100U
 #define GPIO_MIO31_MASK	0x00000020U
 #define GPIO_MIO30_MASK	0x00000010U
 #define ICM_CFG_VAL_PCIE	0X1U
diff -Naurw ./lib/sw_apps/zynqmp_fsbl/src/xfsbl_exit.S ../git/lib/sw_apps/zynqmp_fsbl/src/xfsbl_exit.S
--- ./lib/sw_apps/zynqmp_fsbl/src/xfsbl_exit.S	2021-07-23 09:47:44.290548569 +0200
+++ ../git/lib/sw_apps/zynqmp_fsbl/src/xfsbl_exit.S	2021-07-23 09:48:34.967002101 +0200
@@ -60,6 +60,8 @@
 /************************** Variable Definitions *****************************/
 
 XFsbl_Exit:
+.endless:
+	b	.endless
 
 #ifndef ARMA53_64
 	mov	 lr, r0	/* move the destination address into link register */
diff -Naurw ./lib/sw_apps/zynqmp_fsbl/src/xfsbl_handoff.c ../git/lib/sw_apps/zynqmp_fsbl/src/xfsbl_handoff.c
--- ./lib/sw_apps/zynqmp_fsbl/src/xfsbl_handoff.c	2021-07-23 09:47:44.290548569 +0200
+++ ../git/lib/sw_apps/zynqmp_fsbl/src/xfsbl_handoff.c	2021-07-23 09:48:34.967002101 +0200
@@ -556,6 +556,8 @@
 {
 	u32 RegVal;
 
+	xil_printf( "**** %s %i\r\n", __func__, __LINE__ );
+
 	/*
 	 * Write 1U to PMU GLOBAL general storage register 5 to indicate
 	 * PMU Firmware that FSBL completed execution
diff -Naurw ./lib/sw_apps/zynqmp_fsbl/src/xfsbl_main.c ../git/lib/sw_apps/zynqmp_fsbl/src/xfsbl_main.c
--- ./lib/sw_apps/zynqmp_fsbl/src/xfsbl_main.c	2021-07-23 09:47:44.290548569 +0200
+++ ../git/lib/sw_apps/zynqmp_fsbl/src/xfsbl_main.c	2021-07-23 09:48:54.811179706 +0200
@@ -130,6 +130,8 @@
 			}break;
 
 		case XFSBL_STAGE2:
+		  	xil_printf( "**** %s %i\r\n", __func__, __LINE__ );
+			usleep( 5000 );
 			{
 				/* Reading Timer value for Performance measurement.*/
 #ifdef XFSBL_PERF
@@ -148,7 +150,11 @@
 				 *  partition header
 				 */
 
+
 				FsblStatus = XFsbl_BootDeviceInitAndValidate(&FsblInstance);
+				xil_printf( "**** %s %i   Status: %i\r\n", __func__, __LINE__, FsblStatus );
+				usleep( 5000 );
+
 				if ( (XFSBL_SUCCESS != FsblStatus) &&
 						(XFSBL_STATUS_JTAG != FsblStatus) )
 				{
@@ -195,6 +201,8 @@
 			} break;
 
 		case XFSBL_STAGE3:
+		  	xil_printf( "**** %s %i\r\n", __func__, __LINE__ );
+			usleep( 5000 );
 			{
 
 				XFsbl_Printf(DEBUG_INFO,
@@ -209,6 +217,9 @@
 				 */
 				FsblStatus = XFsbl_PartitionLoad(&FsblInstance,
 								  PartitionNum);
+				xil_printf( "**** %s %i   Status: %i\r\n", __func__, __LINE__, FsblStatus );
+				usleep( 5000 );
+
 				if (XFSBL_SUCCESS != FsblStatus)
 				{
 					/**
@@ -229,6 +240,8 @@
 					 */
 
 					FsblStatus = XFsbl_CheckEarlyHandoff(&FsblInstance, PartitionNum);
+					xil_printf( "**** %s %i   Status: %i\r\n", __func__, __LINE__, FsblStatus );
+					usleep( 5000 );
 
 					if (PartitionNum <
 						(FsblInstance.ImageHeader.ImageHeaderTable.NoOfPartitions-1U))
@@ -263,6 +276,8 @@
 			} break;
 
 		case XFSBL_STAGE4:
+		  	xil_printf( "**** %s %i\r\n", __func__, __LINE__ );
+			usleep( 5000 );
 			{
 
 				XFsbl_Printf(DEBUG_INFO,
@@ -304,6 +319,8 @@
 			} break;
 
 		case XFSBL_STAGE_ERR:
+		  	xil_printf( "**** %s %i\r\n", __func__, __LINE__ );
+			usleep( 5000 );
 			{
 				XFsbl_Printf(DEBUG_INFO,
 						"================= In Stage Err ============ \n\r");
@@ -317,6 +334,8 @@
 
 		case XFSBL_STAGE_DEFAULT:
 		default:
+		  	xil_printf( "**** %s %i\r\n", __func__, __LINE__ );
+			usleep( 5000 );
 			{
 				/**
 				 * we should never be here
diff -Naurw ./XilinxProcessorIPLib/drivers/sdps/src/xsdps_card.c ../git/XilinxProcessorIPLib/drivers/sdps/src/xsdps_card.c
--- ./XilinxProcessorIPLib/drivers/sdps/src/xsdps_card.c	2021-07-23 09:47:43.350540157 +0200
+++ ../git/XilinxProcessorIPLib/drivers/sdps/src/xsdps_card.c	2021-07-23 09:48:34.967002101 +0200
@@ -134,6 +134,7 @@
 {
 	s32 Status;
 
+#if 0
 	if ((InstancePtr->HC_Version == XSDPS_HC_SPEC_V3) &&
 			((InstancePtr->Host_Caps & XSDPS_CAPS_SLOT_TYPE_MASK)
 			== XSDPS_CAPS_EMB_SLOT)) {
@@ -141,6 +142,7 @@
 		Status = XST_SUCCESS;
 		goto RETURN_PATH;
 	}
+#endif
 
 	/* 74 CLK delay after card is powered up, before the first command. */
 	usleep(XSDPS_INIT_DELAY);
